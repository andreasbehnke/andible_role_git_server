---

  - name: install git
    become: yes
    apt: 
      name: git
      state: latest

    # Make sure the other permission flags for files and folders are never been set.
    # Whith this umask of 027 we make sure, multiple users on system can not see files
    # of each other.

  - name: set umask for all sessions - configure pam
    become: yes
    lineinfile:
      path: "/etc/pam.d/common-session"
      line: "session optional\tpam_umask.so"

  - name: set umask for all sessions - configure login definitions
    become: yes
    lineinfile:
      path: "/etc/login.defs"
      regexp: "^UMASK"
      line: "UMASK\t\t027"

    # Add users

  - name: add git users
    become: yes
    user: 
      name: "{{ item.name }}"
      shell: "/usr/bin/git-shell"
      home: "/home/{{ item.name }}"
    loop: "{{ git_users }}"

  - name: git add authorized keys
    include_tasks: authorized_keys.yml
    vars:
      - keys_prefix: "{{ remote_access_authorized_keys_prefix }}"
      - authorized_users: "{{ git_user.authorized_users }}"
      - user: "{{ git_user.name }}"
    loop: "{{ git_users }}"
    loop_control:
      loop_var: git_user

  - name: create directories for git repositories
    become: yes
    file: 
      path: "{{ item }}"
      owner: "git"
      group: "git"
      mode: "u=rwX,g=rX,o="
      state: directory
    loop: "{{ git_repositories }}"

  - name: initialize git repositories
    become: yes
    command:
      chdir: "{{ item }}"
      creates: "{{ item }}/HEAD"
      cmd: "git init --bare"
    loop: "{{ git_repositories }}"

    # Ensure that each existing repository has set correct permissions for user and group.
    # Remove any permission for other. We set user permissions not explizitly, because git
    # itself uses different permissions: Objects are stored readonly to make the repository
    # immutable, and sometimes the execution flag may be set for a single file. Therfore
    # we ensure only that the permission X is set to directories.

  - name: apply credentials to repositories
    become: yes
    file:
      path: "{{ item }}"
      owner: "git"
      group: "git"
      mode: "u+X,g=rX,o="
      state: directory
      recurse: yes
    loop: "{{ git_repositories }}"